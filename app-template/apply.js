#!/usr/bin/env node

'use strict';

//

var templates = {
  'package.json': '/',
  'Makefile': 'cordova/',
  'ProjectMakefile': 'cordova/',
  'config.xml': 'cordova/',
  'Package.appxmanifest':'cordova/wp/',
  '.desktop':'webkitbuilds/.desktop',
  'setup-win.iss':  'webkitbuilds/setup-win.iss',
  //  'bower.json': '/',
};
var configDir = process.argv[2] || 'copay';
var JSONheader = ' { ' + "\n" + '  "//":"PLEASE! Do not edit this file directly",' + "\n" + '  "//":"        Modify it at app-template/", ' + "\n";

var MakefileHeader = "# PLEASE! Do not edit this file directly \n#       Modify it at app-template/\n";

var fs = require('fs-extra');
var path = require('path');



var configBlob = fs.readFileSync(configDir + '/appConfig.json', 'utf8');
var config = JSON.parse(configBlob, 'utf8');

/////////////////
console.log('Applying ' + config.nameCase + ' template');

Object.keys(templates).forEach(function(k) {
  var targetDir = templates[k];
  console.log(' #    ' + k + ' => ' + targetDir);

  var content = fs.readFileSync(k, 'utf8');


  if (k.indexOf('.json') > 0) {
    content = content.replace('{', JSONheader);

  } else if (k.indexOf('Makefile') >= 0) {
    content = MakefileHeader + content;
  }


  Object.keys(config).forEach(function(k) {
    if (k.indexOf('_') == 0) return;

    var r = new RegExp("\\*" + k.toUpperCase() + "\\*", "g");
    content = content.replace(r, config[k]);
  });

  var r = new RegExp("\\*[A-Z]{3,30}\\*", "g");
  var s= content.match(r);
  if (s) {
    console.log('UNKNOWN VARIABLE', s);
    process.exit(1);
  }

  fs.writeFileSync('../' + targetDir + k, content, 'utf8');
});

/////////////////
console.log('Copying ' + configDir + '/appConfig.json' + ' to root');
configBlob = configBlob.replace('{', JSONheader);
fs.writeFileSync('../appConfig.json', configBlob, 'utf8');

console.log('Copying images ' + configDir + ' to root');

var files = [];
fs.walk(configDir + '/img/')
  .on('data', function(item) {
    if (!(item.stats["mode"] & 0x4000))
      files.push(item.path)
  })
  .on('end', function() {
    files.forEach(function(i) {
      console.log(' #    ' + i);
      fs.copySync(i, '../public/img/' + path.basename(i));
    });

    console.log(' # apply.js finished. ');
  })
