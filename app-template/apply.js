#!/usr/bin/env node

'use strict';

//

var templates = {
  'package.json': '/',
  //  'bower.json': '/',
};
var configDir = process.argv[2] || 'copay';
var header = ' { ' + "\n" + '  "//":"PLEASE! Do not edit this file directly",' + "\n" + '  "//":"        Modify it at app-template/", ' + "\n";

var fs = require('fs-extra')


var configBlob = fs.readFileSync(configDir + '/appConfig.json', 'utf8');
var config = JSON.parse(configBlob, 'utf8');
console.log('Applying ' + config.appNameCase + ' template');

Object.keys(templates).forEach(function(k) {
  console.log(' # processing ' + k);
  var targetDir = templates[k];
  var content = fs.readFileSync(k, 'utf8');
  if (k.indexOf('.json' > 0)) {
    content = content.replace('{', header);
  }

  Object.keys(config.replace).forEach(function(k) {
    var r = new RegExp("\\*" + k + "\\*", "g");
    content = content.replace(r, config.replace[k]);
  });
  fs.writeFileSync('../' + targetDir + k, content, 'utf8');
});

console.log(' # Copying ' + configDir + '/appConfig.json' + ' to root');
configBlob = configBlob.replace('{', header);
fs.writeFileSync('../appConfig.json', configBlob, 'utf8');

console.log(' # Copying images ' + configDir + ' to root');

fs.copySync('configDir/img/*', '../public/img', {
  clobber: true,
  preserveTimestamps: true,
});

console.log(' # apply.js finished. ');
